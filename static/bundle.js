(()=>{"use strict";var t,e,i={},n={};function s(t){var e=n[t];if(void 0!==e)return e.exports;var r=n[t]={exports:{}};return i[t](r,r.exports,s),r.exports}e=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,s.t=function(i,n){if(1&n&&(i=this(i)),8&n)return i;if("object"==typeof i&&i){if(4&n&&i.__esModule)return i;if(16&n&&"function"==typeof i.then)return i}var r=Object.create(null);s.r(r);var a={};t=t||[null,e({}),e([]),e(e)];for(var o=2&n&&i;"object"==typeof o&&!~t.indexOf(o);o=e(o))Object.getOwnPropertyNames(o).forEach((t=>a[t]=()=>i[t]));return a.default=()=>i,s.d(r,a),r},s.d=(t,e)=>{for(var i in e)s.o(e,i)&&!s.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},s.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),s.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};class r{constructor(t){this.imageElement=new Image,this.imageElement.loading="eager",this.imageElement.src=t}image(){return this.imageElement}waitForLoad(){return t=this,e=void 0,n=function*(){yield this.imageElement.decode()},new((i=void 0)||(i=Promise))((function(s,r){function a(t){try{h(n.next(t))}catch(t){r(t)}}function o(t){try{h(n.throw(t))}catch(t){r(t)}}function h(t){var e;t.done?s(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(a,o)}h((n=n.apply(t,e||[])).next())}));var t,e,i,n}}class a{constructor(t){if(!a.dataCache[t]){const e=new r(t);a.dataCache[t]=e}this.pictureData=a.dataCache[t]}sharedData(){return this.pictureData}static waitForLoad(){for(const t of Object.values(a.dataCache))t.waitForLoad()}}a.dataCache={};class o{constructor(t){if(this.mainCanvas=document.getElementById(t),!this.mainCanvas||!this.mainCanvas.getContext)throw new Error("Missing canvas");const e=this.mainCanvas.getContext("2d");if(!e)throw new Error("Could not create canvas context");this.drawingContext=e,document.addEventListener("keydown",(t=>{t.altKey&&"Enter"==t.code&&!t.repeat&&this.toggleFullscreen()}))}drawBackgroundColor(t,e,i,n=1){this.drawingContext.fillStyle=`rgb(${t}, ${e}, ${i}, ${n})`,this.drawingContext.fillRect(-1,-1,this.mainCanvas.width+2,this.mainCanvas.height+2)}drawPicture(t,e,i){this.drawingContext.drawImage(t.sharedData().image(),e,i)}drawSprite(t,e,i,n){this.drawingContext.drawImage(t.sharedData().image(),e.x,e.y,e.w,e.h,Math.round(i),Math.round(n),e.w,e.h)}toggleFullscreen(){document.fullscreenElement?document.exitFullscreen():this.mainCanvas.requestFullscreen({navigationUI:"hide"})}canvas(){return this.mainCanvas}context(){return this.drawingContext}}class h{constructor(){this.bindings=[],this.timeHeld=0}}class c{constructor(){this.heldKeys={},this.actions={},document.addEventListener("keydown",(t=>this.keyDownHandler(t))),document.addEventListener("keyup",(t=>this.keyUpHandler(t))),document.addEventListener("contextmenu",(t=>{t.preventDefault(),t.stopPropagation()}))}keyDownHandler(t){this.heldKeys[t.code]=!0}keyUpHandler(t){this.heldKeys[t.code]=!1}newFrame(){t:for(const t of Object.values(this.actions)){for(const e of t.bindings)if(!0===this.heldKeys[e]){t.timeHeld++;continue t}t.timeHeld=0}}addAction(t,e=[]){if(this.actions[t])throw new Error(`Action "${t}" already exists`);this.actions[t]=new h,this.bindAction(t,e)}bindAction(t,e){const i=this.actions[t];if(!i)throw new Error(`Action "${t}" doesn't exist`);for(const t of e)t in i.bindings||i.bindings.push(t)}clearActionBindings(t){const e=this.actions[t];if(!e)throw new Error(`Action "${t}" doesn't exist`);e.bindings=[]}timeHeld(t){const e=this.actions[t];return e?e.timeHeld:0}held(t){return this.timeHeld(t)>0}justPressed(t){return 1===this.timeHeld(t)}autoRepeat(t,e,i){const n=this.timeHeld(t);return 1===n||n>=e&&(n-e)%i==0}}class d{constructor(){this.tickLogic=[],this.drawLogic=[]}tick(t){for(const e of this.tickLogic)e.tick(t,this)}draw(t,e){for(const i of this.drawLogic)i.draw(t,this,e)}addLogic(t){this.tickLogic.push(t),this.drawLogic.push(t)}addTickLogic(t){this.tickLogic.push(t)}addDrawLogic(t){this.drawLogic.push(t)}}const l=1e3/60;class w{constructor(){this.timestamp=0,this.goodSamples=0,this.timings=[],this.lastGoodAverage=l}updateTimings(){const t=performance.now();if(this.timestamp<=0)return void(this.timestamp=t);const e=t-this.timestamp;this.timestamp=t,e>20.1||(this.timings.length>=60&&this.timings.shift(),this.timings.length>0&&(Math.abs(this.timings[this.timings.length-1]-e)>6||Math.abs(this.averageRateRaw()-e)>6?this.goodSamples=0:this.goodSamples+=1),this.timings.push(e))}averageRateRaw(){let t=0;for(const e of this.timings)t+=e;return t/this.timings.length}averageRate(){return this.hasEnoughSamples()&&(this.lastGoodAverage=this.averageRateRaw()),this.lastGoodAverage}shouldLerp(){const t=this.averageRate();return Math.abs(t-l)>1}hasEnoughSamples(){return this.goodSamples>60}reset(){this.timestamp=0,this.goodSamples=0,this.timings=[]}}class u{constructor(t){this.currentScene=new d,this.pendingSceneFunc=null,this.vsyncRate=new w,this.lastTick=performance.now(),this.tickQueue=0,this.framesSinceTickLag=0,this.doDraw=!1,this.doLerp=!1,this.running=!1,this.gameInput=new c,this.gameRenderer=new o(t)}run(){if(this.running)throw new Error("run() already called");this.running=!0,this.lastTick=performance.now(),this.tickQueue=0,requestAnimationFrame(this.timerUpdate.bind(this))}scene(){return this.currentScene}setScene(t){this.pendingSceneFunc=t}input(){return this.gameInput}renderer(){return this.gameRenderer}timerUpdate(){this.vsyncRate.updateTimings(),null!==this.pendingSceneFunc&&(this.currentScene=this.pendingSceneFunc(),this.pendingSceneFunc=null),this.updateTicks(),this.updateDraw(),requestAnimationFrame(this.timerUpdate.bind(this))}updateTicks(){const t=performance.now();for(this.tickQueue+=t-this.lastTick,this.lastTick=t;this.tickQueue>=l;){this.gameInput.newFrame(),this.currentScene.tick(this),this.framesSinceTickLag++,this.doDraw=!0,this.tickQueue-=l;const e=performance.now();if(e-t>33.333333333333336){this.tickQueue=0,this.lastTick=e,this.framesSinceTickLag=0;break}}this.doLerp=this.vsyncRate.shouldLerp()&&this.framesSinceTickLag>=4}updateDraw(){if(!this.doDraw)return;let t;this.doLerp?t=this.tickQueue/l:(t=1,this.doDraw=!1),this.gameRenderer.drawBackgroundColor(0,0,0),this.currentScene.draw(this,t)}}const g=JSON.parse('{"wall":[{"x":0,"y":0,"w":32,"h":32},{"x":32,"y":0,"w":32,"h":32},{"x":64,"y":0,"w":32,"h":32},{"x":96,"y":0,"w":32,"h":32},{"x":128,"y":0,"w":32,"h":32},{"x":160,"y":0,"w":32,"h":32},{"x":192,"y":0,"w":32,"h":32},{"x":224,"y":0,"w":32,"h":32},{"x":0,"y":32,"w":32,"h":32},{"x":32,"y":32,"w":32,"h":32},{"x":64,"y":32,"w":32,"h":32},{"x":96,"y":32,"w":32,"h":32},{"x":128,"y":32,"w":32,"h":32},{"x":160,"y":32,"w":32,"h":32},{"x":192,"y":32,"w":32,"h":32},{"x":224,"y":32,"w":32,"h":32}],"floor":{"x":0,"y":64,"w":32,"h":32},"dropzone":{"x":32,"y":64,"w":32,"h":32},"floorAvoid":{"x":64,"y":64,"w":32,"h":32},"dropzoneAvoid":{"x":96,"y":64,"w":32,"h":32},"floorCorral":{"x":128,"y":64,"w":32,"h":32},"dropzoneCorral":{"x":160,"y":64,"w":32,"h":32},"floorCorralAvoid":{"x":192,"y":64,"w":32,"h":32},"dropzoneCorralAvoid":{"x":224,"y":64,"w":32,"h":32},"bg":[{"x":0,"y":96,"w":32,"h":32},{"x":32,"y":96,"w":32,"h":32},{"x":64,"y":96,"w":32,"h":32},{"x":96,"y":96,"w":32,"h":32}],"playerDown1":{"x":0,"y":160,"w":32,"h":32},"playerDown2":{"x":32,"y":160,"w":32,"h":32},"playerDown3":{"x":64,"y":160,"w":32,"h":32},"playerRight1":{"x":96,"y":160,"w":32,"h":32},"playerRight2":{"x":128,"y":160,"w":32,"h":32},"playerRight3":{"x":160,"y":160,"w":32,"h":32},"playerLeft1":{"x":0,"y":192,"w":32,"h":32},"playerLeft2":{"x":32,"y":192,"w":32,"h":32},"playerLeft3":{"x":64,"y":192,"w":32,"h":32},"playerUp1":{"x":96,"y":192,"w":32,"h":32},"playerUp2":{"x":128,"y":192,"w":32,"h":32},"playerUp3":{"x":160,"y":192,"w":32,"h":32},"playerUp4":{"x":192,"y":192,"w":32,"h":32},"playerHmm":{"x":192,"y":160,"w":32,"h":32},"playerWin":{"x":224,"y":192,"w":32,"h":32},"crate":{"x":0,"y":224,"w":32,"h":32},"crateGood":{"x":32,"y":224,"w":32,"h":32},"crateFrozen":{"x":64,"y":224,"w":32,"h":32},"crateFrozenGood":{"x":96,"y":224,"w":32,"h":32},"confetti":[{"x":224,"y":160,"w":8,"h":8},{"x":240,"y":160,"w":8,"h":8},{"x":232,"y":168,"w":8,"h":8},{"x":248,"y":168,"w":8,"h":8},{"x":224,"y":176,"w":8,"h":8}]}'),y=s.t(g,2);class p{constructor(t){this.canvas=null,this.scroll=0,this.scrollSpeed=t,this.image=new a("res/GameAtlas.png")}createCanvas(){if(this.canvas)return;const t=[],e=y.bg[0].w,i=y.bg[0].h;for(let e=0;e<1024;++e)t.push(Math.random()<.3);const n=new OffscreenCanvas(32*e,32*i),s=n.getContext("2d");if(!s)throw new Error("Offscreen canvas context failed");const r=Math.ceil(n.width/e)+1,a=Math.ceil(n.height/i)+1;for(let e=0;e<a;++e)for(let i=0;i<r;++i){let n=(i+e)%2?1:0;const[r,a]=[i%32,e%32];t[r+32*a]&&(n+=2);const o=y.bg[n];s.drawImage(this.image.sharedData().image(),o.x,o.y,o.w,o.h,i*o.w,e*o.h,o.w,o.h)}this.canvas=n}tick(t,e){this.scroll+=this.scrollSpeed}draw(t,e,i){if(this.createCanvas(),!this.canvas)return;const n=t.renderer(),[s,r]=[n.canvas().width,n.canvas().height],a=Math.ceil(s/this.canvas.width)+1,o=Math.ceil(r/this.canvas.height)+1,h=n.context();var c,d,l;const w=(c=this.scroll-this.scrollSpeed,d=this.scroll,((l=i)<=0?c:l>=1?d:c+l*(d-c))%this.canvas.height);for(let t=0;t<o;++t)for(let e=0;e<a;++e)h.drawImage(this.canvas,Math.floor(e*this.canvas.width-w),Math.floor(t*this.canvas.height-w))}}const m=JSON.parse('{"title":{"x":1,"y":1,"w":644,"h":156},"arrowRight":{"x":1,"y":161,"w":12,"h":22},"arrowLeft":{"x":19,"y":161,"w":12,"h":22},"arrowUp":{"x":33,"y":161,"w":20,"h":14},"arrowDown":{"x":33,"y":177,"w":20,"h":14},"starWhiteEmpty":{"x":65,"y":161,"w":14,"h":12},"starWhiteFilled":{"x":81,"y":161,"w":14,"h":12},"starBlackEmpty":{"x":65,"y":175,"w":14,"h":12},"starBlackFilled":{"x":81,"y":175,"w":14,"h":12}}'),f=s.t(m,2);class x{constructor(){this.picture=new a("res/TitleAtlas.png"),this.ticks=0}tick(t,e){this.ticks++}draw(t,e,i){const n=t.renderer(),s=n.canvas().width;n.drawSprite(this.picture,f.title,(s-f.title.w)/2,32)}}window.onload=function(){const t=new u("game_surface"),e=t.input();e.addAction("left",["ArrowLeft","KeyA"]),e.addAction("right",["ArrowRight","KeyD"]),e.addAction("up",["ArrowUp","KeyW"]),e.addAction("down",["ArrowDown","KeyS"]),t.setScene((()=>function(){const t=new d,e=new p(.25),i=new x;return t.addLogic(e),t.addLogic(i),a.waitForLoad(),t}())),t.run()}})();