(()=>{"use strict";const t=1e3/60;class i{constructor(){this.timestamp=0,this.goodSamples=0,this.timings=[],this.lastGoodAverage=t}updateTimings(){const t=performance.now();if(this.timestamp<=0)return void(this.timestamp=t);const i=t-this.timestamp;this.timestamp=t,i>20.1||(this.timings.length>=60&&this.timings.shift(),this.timings.length>0&&(Math.abs(this.timings[this.timings.length-1]-i)>6||Math.abs(this.averageRateRaw()-i)>6?this.goodSamples=0:this.goodSamples+=1),this.timings.push(i))}averageRateRaw(){let t=0;for(const i of this.timings)t+=i;return t/this.timings.length}averageRate(){return this.hasEnoughSamples()&&(this.lastGoodAverage=this.averageRateRaw()),this.lastGoodAverage}shouldLerp(){const i=this.averageRate();return Math.abs(i-t)>1}hasEnoughSamples(){return this.goodSamples>60}reset(){this.timestamp=0,this.goodSamples=0,this.timings=[]}}class s{constructor(){if(this.vsyncRate=new i,this.lastTick=performance.now(),this.tickQueue=0,this.tickCount=0,this.framesSinceLogicLag=0,this.doDraw=!1,this.doLerp=!1,this.canvas=document.getElementById("game_surface"),!this.canvas||!this.canvas.getContext)throw new Error("Missing canvas");if(this.context=this.canvas.getContext("2d"),!this.context)throw new Error("Could not create canvas context")}run(){this.lastTick=performance.now(),this.tickQueue=0,requestAnimationFrame(this.timerUpdate.bind(this))}timerUpdate(){this.vsyncRate.updateTimings(),this.updateTicks(),this.draw(),requestAnimationFrame(this.timerUpdate.bind(this))}updateTicks(){const i=performance.now();for(this.tickQueue+=i-this.lastTick,this.lastTick=i;this.tickQueue>=t;){this.tick(),this.framesSinceLogicLag++,this.doDraw=!0,this.tickQueue-=t;const s=performance.now();if(s-i>33.333333333333336){this.tickQueue=0,this.lastTick=s,this.framesSinceLogicLag=0;break}}this.evaluateLerp()}evaluateLerp(){this.doLerp=this.vsyncRate.shouldLerp()&&this.framesSinceLogicLag>=4}tick(){this.tickCount+=1}draw(){if(!this.doDraw)return;if(!this.canvas||!this.context)throw new Error("Missing canvas");let i;this.doLerp?i=this.tickQueue/t:(i=1,this.doDraw=!1),this.context.clearRect(0,0,this.canvas.width,this.canvas.height);const s=64+this.tickCount%60*4,e=64+(this.tickCount-1)%60*4;var a,h,n;this.context.fillStyle="rgb(128, 128, 128)",this.context.fillRect((a=e,h=s,(n=i)<=0?a:n>=1?h:a+n*(h-a)),64,256,256)}}window.onload=function(){(new s).run()}})();